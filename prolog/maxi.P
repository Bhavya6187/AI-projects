member(X,[X|R]).
member(X,[Y|R]) :- member(X,R).


takeout(X,[X|R],R).
takeout(X,[F|R],[F|S]) :- takeout(X,R,S).


append([],X,X).
append([X|Y],Z,[X|W]) :- append(Y,Z,W).



reverse([X|Y],Z,W) :- reverse(Y,[X|Z],W).
reverse([],X,X).



mergesort([],[]).    /* covers special case */
mergesort([A],[A]).
mergesort([A,B|R],S) :-  
   split([A,B|R],L1,L2),
   mergesort(L1,S1),
   mergesort(L2,S2),
   merge(S1,S2,S).

split([],[],[]).
split([A],[A],[]).
split([A,B|R],[A|Ra],[B|Rb]) :-  split(R,Ra,Rb).

merge(A,[],A).
merge([],B,B).
merge([A|Ra],[B|Rb],[A|M]) :-  A =< B, merge(Ra,[B|Rb],M).
merge([A|Ra],[B|Rb],[B|M]) :-  A > B,  merge([A|Ra],Rb,M).


 connected(a,b).
 connected(a,c).
 connected(b,d).
 connected(b,e).
 connected(c,f).
 connected(c,finish).
                               
goal(finish).

dfs(Start, Visited, [Start]):- goal(Start).
dfs(Start, Visited, [Start|Rest]):- connected(Start, Next),
                           not(member(Next, Visited)).
                           dfs(Next, [Start|Visited], Rest).
      

